#ifndef __STAN__AGRAD__VAR_HPP__
#define __STAN__AGRAD__VAR_HPP__

#include <stan/agrad/rev/var_stack.hpp>
#include <stan/agrad/rev/chainable.hpp>
#include <stan/agrad/rev/vari.hpp>
#include <stan/agrad/rev/var.hpp>
#include <stan/agrad/rev/print_stack.hpp>
#include <stan/agrad/rev/boost_fpclassify.hpp>

#include <stan/agrad/rev/op/v_vari.hpp>
#include <stan/agrad/rev/op/vv_vari.hpp>
#include <stan/agrad/rev/op/vd_vari.hpp>
#include <stan/agrad/rev/op/dv_vari.hpp>
#include <stan/agrad/rev/op/vvv_vari.hpp>
#include <stan/agrad/rev/op/vvd_vari.hpp>
#include <stan/agrad/rev/op/vdv_vari.hpp>
#include <stan/agrad/rev/op/vdd_vari.hpp>
#include <stan/agrad/rev/op/dvv_vari.hpp>
#include <stan/agrad/rev/op/dvd_vari.hpp>
#include <stan/agrad/rev/op/ddv_vari.hpp>
#include <stan/agrad/rev/precomp_v_vari.hpp>

#include <stan/agrad/rev/operator_unary_negative.hpp>
#include <stan/agrad/rev/operator_equal.hpp>
#include <stan/agrad/rev/operator_not_equal.hpp>
#include <stan/agrad/rev/operator_greater_than.hpp>
#include <stan/agrad/rev/operator_greater_than_or_equal.hpp>
#include <stan/agrad/rev/operator_less_than.hpp>
#include <stan/agrad/rev/operator_less_than_or_equal.hpp>
#include <stan/agrad/rev/operator_unary_not.hpp>
#include <stan/agrad/rev/operator_unary_plus.hpp>
#include <stan/agrad/rev/operator_addition.hpp>
#include <stan/agrad/rev/operator_subtraction.hpp>
#include <stan/agrad/rev/operator_multiplication.hpp>
#include <stan/agrad/rev/operator_division.hpp>
#include <stan/agrad/rev/operator_unary_increment.hpp>
#include <stan/agrad/rev/operator_unary_decrement.hpp>

#include <stan/agrad/rev/exp.hpp>
#include <stan/agrad/rev/log.hpp>
#include <stan/agrad/rev/log10.hpp>
#include <stan/agrad/rev/sqrt.hpp>
#include <stan/agrad/rev/pow.hpp>
#include <stan/agrad/rev/inv.hpp>
#include <stan/agrad/rev/inv_sqrt.hpp>
#include <stan/agrad/rev/inv_square.hpp>
#include <stan/agrad/rev/cos.hpp>
#include <stan/agrad/rev/sin.hpp>
#include <stan/agrad/rev/tan.hpp>
#include <stan/agrad/rev/acos.hpp>
#include <stan/agrad/rev/asin.hpp>
#include <stan/agrad/rev/atan.hpp>
#include <stan/agrad/rev/atan2.hpp>
#include <stan/agrad/rev/cosh.hpp>
#include <stan/agrad/rev/sinh.hpp>
#include <stan/agrad/rev/tanh.hpp>
#include <stan/agrad/rev/fabs.hpp>
#include <stan/agrad/rev/floor.hpp>
#include <stan/agrad/rev/ceil.hpp>
#include <stan/agrad/rev/fmod.hpp>
#include <stan/agrad/rev/abs.hpp>
#include <stan/agrad/rev/jacobian.hpp>

#include <stan/agrad/rev/operator_plus_equal.hpp>
#include <stan/agrad/rev/operator_minus_equal.hpp>
#include <stan/agrad/rev/operator_multiply_equal.hpp>
#include <stan/agrad/rev/operator_divide_equal.hpp>

#include <stan/agrad/rev/numeric_limits.hpp>
#include <stan/agrad/rev/is_uninitialized.hpp>

#include <stan/agrad/rev/acosh.hpp>
#include <stan/agrad/rev/atanh.hpp>
#include <stan/agrad/rev/asinh.hpp>
#include <stan/agrad/rev/erf.hpp>
#include <stan/agrad/rev/erfc.hpp>
#include <stan/agrad/rev/exp2.hpp>
#include <stan/agrad/rev/expm1.hpp>
#include <stan/agrad/rev/lgamma.hpp>
#include <stan/agrad/rev/log1p.hpp>
#include <stan/agrad/rev/log1m.hpp>
#include <stan/agrad/rev/fma.hpp>
#include <stan/agrad/rev/fmax.hpp>
#include <stan/agrad/rev/fmin.hpp>
#include <stan/agrad/rev/gamma_p.hpp>
#include <stan/agrad/rev/gamma_q.hpp>
#include <stan/agrad/rev/hypot.hpp>
#include <stan/agrad/rev/log2.hpp>
#include <stan/agrad/rev/cbrt.hpp>
#include <stan/agrad/rev/round.hpp>
#include <stan/agrad/rev/trunc.hpp>
#include <stan/agrad/rev/fdim.hpp>
#include <stan/agrad/rev/tgamma.hpp>
#include <stan/agrad/rev/step.hpp>
#include <stan/agrad/rev/inv_cloglog.hpp>
#include <stan/agrad/rev/Phi.hpp>
#include <stan/agrad/rev/inv_logit.hpp>
#include <stan/agrad/rev/Phi_approx.hpp>
#include <stan/agrad/rev/log_loss.hpp>
#include <stan/agrad/rev/log1m_exp.hpp>
#include <stan/agrad/rev/log1p_exp.hpp>
#include <stan/agrad/rev/log_diff_exp.hpp>
#include <stan/agrad/rev/log_sum_exp.hpp>
#include <stan/agrad/rev/square.hpp>
#include <stan/agrad/rev/multiply_log.hpp>
#include <stan/agrad/rev/if_else.hpp>
#include <stan/agrad/rev/ibeta.hpp>
#include <stan/agrad/rev/value_of.hpp>
#include <stan/agrad/rev/as_bool.hpp>
#include <stan/agrad/rev/owens_t.hpp>
#include <stan/agrad/rev/bessel_first_kind.hpp>
#include <stan/agrad/rev/bessel_second_kind.hpp>
#include <stan/agrad/rev/modified_bessel_first_kind.hpp>
#include <stan/agrad/rev/modified_bessel_second_kind.hpp>
#include <stan/agrad/rev/falling_factorial.hpp>
#include <stan/agrad/rev/rising_factorial.hpp>
#include <stan/agrad/rev/log_falling_factorial.hpp>
#include <stan/agrad/rev/log_rising_factorial.hpp>
#endif
